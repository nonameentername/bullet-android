# JiSeop Moon (zcube@zcube.kr). Copyright (C) 2010~2011. Simplified BSD License.

########################################################################################
# OgreKit Setting
########################################################################################

#SET (OGRE_BUILD_PLATFORM_ANDROID 1)
#SET (OGREKIT_BUILD_ANDROID 1)
SET (OGREKIT_UNITY_BUILD 1)
#SET (OGREKIT_MINIMAL_FREEIMAGE_CODEC 1)
SET (OPENGLES2_INCLUDE_DIR $ENV{NDK}/platforms/android-8/arch-arm/usr/include/GLES2)
SET (OPENGLES2_gl_LIBRARY  $ENV{NDK}/platforms/android-8/arch-arm/usr/lib/libGLESv2.so)

########################################################################################
# CMake System Setting
########################################################################################

SET (CMAKE_SYSTEM_NAME Linux)
SET (CMAKE_SYSTEM_VERSION 1)
SET (CMAKE_SYSTEM_PROCESSOR arm)
#SET (CMAKE_C_COMPILER_FORCED true)
#SET (CMAKE_C_COMPILER_WORKS true)
#SET (CMAKE_CXX_COMPILER_FORCED true)
#SET (CMAKE_CXX_COMPILER_WORKS true)

########################################################################################
# NDK Setting
########################################################################################

SET(NDK_PLATFORM "android-5")
SET(NDK_ARCHITECTURE "arm")
SET(NDK_TARGET "armeabi")
#gnu-libstdc++, system, stlport
SET(NDK_STL "gnu-libstdc++" CACHE TYPE STRING)
SET(NDK_SYSROOT "$ENV{NDK}/platforms/${NDK_PLATFORM}/arch-${NDK_ARCHITECTURE}")
SET(NDK_TOOLCHAIN "arm-linux-androideabi")
SET(NDK_TOOLCHAIN_VERSION "4.4.3")
ADD_DEFINITIONS(
	-D__GNUC__=4
	-D__GNUC_MINOR__=4
	-D__GNUC_PATCHLEVEL__=3
)
SET(NDK_TOOLCHAIN_PREFIX "${NDK_TOOLCHAIN}-")

########################################################################################
# Find Tools
########################################################################################

SET (CMAKE_C_COMPILER "${NDK_TOOLCHAIN_PREFIX}gcc" CACHE TYPE PATH)
SET (CMAKE_CXX_COMPILER "${NDK_TOOLCHAIN_PREFIX}g++" CACHE TYPE PATH)

SET (CMAKE_FIND_ROOT_PATH "$ENV{NDK_BIN}" "$ENV{NDK_BIN}/.." "$ENV{NDK}")
SET (CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH)
SET (CMAKE_FIND_ROOT_PATH_MODE_LIBRARY BOTH)
SET (CMAKE_FIND_ROOT_PATH_MODE_INCLUDE BOTH)

find_program(CMAKE_AR NAMES "${NDK_TOOLCHAIN_PREFIX}ar")
find_program(CMAKE_LINKER NAMES "${NDK_TOOLCHAIN_PREFIX}ld")
find_program(CMAKE_NM NAMES "${NDK_TOOLCHAIN_PREFIX}nm")
find_program(CMAKE_OBJCOPY NAMES "${NDK_TOOLCHAIN_PREFIX}objcopy")
find_program(CMAKE_OBJDUMP NAMES "${NDK_TOOLCHAIN_PREFIX}objdump")
find_program(CMAKE_RANLIB NAMES "${NDK_TOOLCHAIN_PREFIX}ranlib")
find_program(CMAKE_STRIP NAMES "${NDK_TOOLCHAIN_PREFIX}strip")

SET (NDK_GDBSERVER "$ENV{NDK_BIN}/../../gdbserver" CACHE TYPE PATH)

########################################################################################
# STL Setting
########################################################################################

if(${NDK_STL} STREQUAL "system")
MESSAGE("Use no exceptions, rtti")
SET (NDK_BUILD_FLAGS "-fno-exceptions -fno-rtti" CACHE TYPE STRING)
link_libraries(
	stdc++
)
endif(${NDK_STL} STREQUAL "system")

if(${NDK_STL} STREQUAL "gnu-libstdc++")
MESSAGE("Use exceptions, rtti")
SET (NDK_BUILD_FLAGS "-fexceptions -frtti" CACHE TYPE STRING)
link_libraries(
	$ENV{NDK}/sources/cxx-stl/${NDK_STL}/libs/${NDK_TARGET}/libstdc++.so
)
endif(${NDK_STL} STREQUAL "gnu-libstdc++")

if(${NDK_STL} STREQUAL "stlport")
MESSAGE("Use no exceptions, rtti")
SET (NDK_BUILD_FLAGS "-fno-exceptions -fno-rtti" CACHE TYPE STRING)
link_libraries(
	$ENV{NDK}/sources/cxx-stl/${NDK_STL}/libs/${NDK_TARGET}/libstdc++.so
)
endif(${NDK_STL} STREQUAL "stlport")

include_directories(
	$ENV{NDK}/sources/cxx-stl/${NDK_STL}/libs/${NDK_TARGET}/include
	$ENV{NDK}/sources/cxx-stl/${NDK_STL}/include
)

link_directories(
	$ENV{NDK}/sources/cxx-stl/${NDK_STL}/libs/${NDK_TARGET}
)

########################################################################################
# Compiler Flags
########################################################################################

ADD_DEFINITIONS(
	-D__ARM_ARCH_5__
	-D__ARM_ARCH_5T__
	-D__ARM_ARCH_5E__
	-D__ARM_ARCH_5TE__
	-DANDROID
	-D__ANDROID__
	-DSTDC_HEADERS
	-nostdlib 
)

include_directories(
	${NDK_SYSROOT}
	${NDK_SYSROOT}/usr/include
)

link_directories(
	${NDK_SYSROOT}/usr/lib
)

link_libraries(
	dl
	gcc
	c
	m
)

SET (NDK_CPU_FLAGS " -march=armv5te -mtune=xscale -msoft-float -mfloat-abi=soft ")

SET (CMAKE_MODULE_LINKER_FLAGS "-Wl,--start-group --sysroot=${NDK_SYSROOT} ${NDK_CPU_FLAGS} -Wl,--no-undefined -nostdlib -Wl,-rpath-link=${NDK_SYSROOT}/usr/lib,-dynamic-linker=/system/bin/linker " CACHE TYPE STRING)
SET (CMAKE_SHARED_LINKER_FLAGS "-Wl,--start-group --sysroot=${NDK_SYSROOT} ${NDK_CPU_FLAGS} -Wl,--no-undefined -nostdlib -Wl,-rpath-link=${NDK_SYSROOT}/usr/lib,-dynamic-linker=/system/bin/linker " CACHE TYPE STRING)
SET (CMAKE_EXE_LINKER_FLAGS    "-Wl,--start-group --sysroot=${NDK_SYSROOT} ${NDK_CPU_FLAGS} -Wl,--no-undefined -nostdlib -Wl,-rpath-link=${NDK_SYSROOT}/usr/lib,-dynamic-linker=/system/bin/linker ${NDK_SYSROOT}/usr/lib/crtbegin_dynamic.o ${NDK_SYSROOT}/usr/lib/crtend_android.o " CACHE TYPE STRING)

SET (CMAKE_C_FLAGS   "-fpic -ffunction-sections -funwind-tables -fstack-protector -Wno-psabi ${NDK_CPU_FLAGS} -fomit-frame-pointer -fno-strict-aliasing -funswitch-loops -finline-limit=300 -fno-short-enums" CACHE TYPE STRING)
SET (CMAKE_CXX_FLAGS "-fpic -ffunction-sections -funwind-tables -fstack-protector -Wno-psabi ${NDK_CPU_FLAGS} -fomit-frame-pointer -fno-strict-aliasing -funswitch-loops -finline-limit=300 -fno-short-enums ${NDK_BUILD_FLAGS}" CACHE TYPE STRING)

SET (Android 1)
